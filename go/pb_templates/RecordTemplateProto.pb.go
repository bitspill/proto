// Code generated by protoc-gen-go. DO NOT EDIT.
// source: RecordTemplateProto.proto

/*
Package pb_templates is a generated protocol buffer package.

It is generated from these files:
	RecordTemplateProto.proto
	tmpl_433C2783.proto

It has these top-level messages:
	RecordTemplateProto
	Tmpl_433C2783
*/
package pb_templates

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RecordTemplateProto struct {
	// Human readable name to quickly identify type (non-unique)
	FriendlyName string `protobuf:"bytes,1,opt,name=friendlyName" json:"friendlyName,omitempty"`
	// Description of the purpose behind this new type
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Compiled descriptor including dependencies; Defines fields
	DescriptorSetProto []byte `protobuf:"bytes,4,opt,name=DescriptorSetProto,proto3" json:"DescriptorSetProto,omitempty"`
	// List of unique template identifiers required for use with this template
	Extends []uint32 `protobuf:"fixed32,13,rep,packed,name=extends" json:"extends,omitempty"`
	// Populated by oipd with the unique identifier for this type
	Identifier uint32 `protobuf:"fixed32,10,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *RecordTemplateProto) Reset()                    { *m = RecordTemplateProto{} }
func (m *RecordTemplateProto) String() string            { return proto.CompactTextString(m) }
func (*RecordTemplateProto) ProtoMessage()               {}
func (*RecordTemplateProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RecordTemplateProto) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *RecordTemplateProto) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RecordTemplateProto) GetDescriptorSetProto() []byte {
	if m != nil {
		return m.DescriptorSetProto
	}
	return nil
}

func (m *RecordTemplateProto) GetExtends() []uint32 {
	if m != nil {
		return m.Extends
	}
	return nil
}

func (m *RecordTemplateProto) GetIdentifier() uint32 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func init() {
	proto.RegisterType((*RecordTemplateProto)(nil), "oipProto.templates.RecordTemplateProto")
}

func init() { proto.RegisterFile("RecordTemplateProto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x31, 0x4b, 0xc4, 0x40,
	0x10, 0x85, 0x59, 0x3d, 0x8c, 0x8e, 0x39, 0x90, 0xb1, 0x59, 0x1b, 0x59, 0xae, 0x4a, 0x95, 0x14,
	0x87, 0x95, 0x9d, 0x58, 0x59, 0x88, 0xac, 0x56, 0x36, 0x72, 0xc9, 0xce, 0xc5, 0x81, 0x4b, 0x66,
	0xd9, 0x8c, 0xa8, 0xbf, 0xd1, 0x3f, 0x25, 0xc6, 0x53, 0x72, 0x70, 0xcd, 0xc2, 0xf7, 0xbd, 0xb7,
	0x03, 0x0f, 0x2e, 0x3c, 0x35, 0x92, 0xc2, 0x13, 0x75, 0x71, 0xb3, 0x52, 0x7a, 0x48, 0xa2, 0x52,
	0xc6, 0x9f, 0x17, 0x51, 0x38, 0xfe, 0xb2, 0x6e, 0xd3, 0x61, 0xf1, 0x65, 0xe0, 0x7c, 0xcf, 0x0f,
	0x5c, 0x40, 0xbe, 0x4e, 0x4c, 0x7d, 0xd8, 0x7c, 0xde, 0xaf, 0x3a, 0xb2, 0xc6, 0x99, 0xe2, 0xc4,
	0xef, 0x38, 0x74, 0x70, 0x1a, 0x68, 0x68, 0x12, 0x47, 0x65, 0xe9, 0xed, 0xc1, 0x58, 0x99, 0x2a,
	0x2c, 0x01, 0x6f, 0xb7, 0x28, 0xe9, 0x91, 0x74, 0xbc, 0x6d, 0x67, 0xce, 0x14, 0xb9, 0xdf, 0x93,
	0xa0, 0x85, 0x8c, 0x3e, 0x94, 0xfa, 0x30, 0xd8, 0xb9, 0x3b, 0x2c, 0x32, 0xff, 0x87, 0x78, 0x09,
	0xc0, 0x81, 0x7a, 0xe5, 0x35, 0x53, 0xb2, 0xe0, 0x4c, 0x91, 0xf9, 0x89, 0xb9, 0x9b, 0x1d, 0xe7,
	0x67, 0xf3, 0x9b, 0xab, 0xe7, 0x65, 0xcb, 0xfa, 0xfa, 0x56, 0x97, 0x8d, 0x74, 0x95, 0x70, 0x7c,
	0x6f, 0xab, 0x71, 0x7b, 0xd5, 0x4a, 0x15, 0xeb, 0x97, 0xff, 0xdd, 0xd7, 0x53, 0xa8, 0x8f, 0xc6,
	0xce, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x52, 0x18, 0xe0, 0x56, 0x3c, 0x01, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tmpl_EE0D326B.proto

package pb_templates

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import oipProto "github.com/oipwg/proto/go/pb_oip"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SimpleAssetHeld
// ee0d326b92182b81811c6a9377dc668a3452fa773dc8150d697899e0301f5cfd
type Tmpl_EE0D326B struct {
	Coin    *oipProto.Txid `protobuf:"bytes,1,opt,name=coin" json:"coin,omitempty"`
	Asset   string         `protobuf:"bytes,2,opt,name=asset" json:"asset,omitempty"`
	Amount  uint32         `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Scale   uint32         `protobuf:"varint,4,opt,name=scale" json:"scale,omitempty"`
	Expires uint64         `protobuf:"varint,5,opt,name=expires" json:"expires,omitempty"`
}

func (m *Tmpl_EE0D326B) Reset()                    { *m = Tmpl_EE0D326B{} }
func (m *Tmpl_EE0D326B) String() string            { return proto.CompactTextString(m) }
func (*Tmpl_EE0D326B) ProtoMessage()               {}
func (*Tmpl_EE0D326B) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Tmpl_EE0D326B) GetCoin() *oipProto.Txid {
	if m != nil {
		return m.Coin
	}
	return nil
}

func (m *Tmpl_EE0D326B) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *Tmpl_EE0D326B) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Tmpl_EE0D326B) GetScale() uint32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *Tmpl_EE0D326B) GetExpires() uint64 {
	if m != nil {
		return m.Expires
	}
	return 0
}

func init() {
	proto.RegisterType((*Tmpl_EE0D326B)(nil), "oipProto.templates.tmpl_EE0D326B")
}

func init() { proto.RegisterFile("tmpl_EE0D326B.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0xc9, 0x2d, 0xc8,
	0x89, 0x77, 0x75, 0x35, 0x70, 0x31, 0x36, 0x32, 0x73, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0xca, 0xcf, 0x2c, 0x08, 0x00, 0xb1, 0xf4, 0x4a, 0x52, 0x73, 0x0b, 0x72, 0x12, 0x4b, 0x52,
	0x8b, 0xa5, 0xb8, 0x4a, 0x2a, 0x32, 0x53, 0x20, 0xf2, 0x4a, 0x13, 0x19, 0xb9, 0x78, 0x51, 0xf4,
	0x09, 0x29, 0x71, 0xb1, 0x24, 0xe7, 0x67, 0xe6, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0xf1,
	0xe9, 0xc1, 0x0d, 0x08, 0xa9, 0xc8, 0x4c, 0x09, 0x02, 0xcb, 0x09, 0x89, 0x70, 0xb1, 0x26, 0x16,
	0x17, 0xa7, 0x96, 0x48, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x38, 0x42, 0x62, 0x5c, 0x6c,
	0x89, 0xb9, 0xf9, 0xa5, 0x79, 0x25, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xbc, 0x41, 0x50, 0x1e, 0x48,
	0x75, 0x71, 0x72, 0x62, 0x4e, 0xaa, 0x04, 0x0b, 0x58, 0x18, 0xc2, 0x11, 0x92, 0xe0, 0x62, 0x4f,
	0xad, 0x28, 0xc8, 0x2c, 0x4a, 0x2d, 0x96, 0x60, 0x55, 0x60, 0xd4, 0x60, 0x09, 0x82, 0x71, 0x9d,
	0x6c, 0xa3, 0xac, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0xf3, 0x33,
	0x0b, 0xca, 0xd3, 0xf5, 0xc1, 0xae, 0xd5, 0x4f, 0xcf, 0xd7, 0x2f, 0x48, 0x8a, 0xcf, 0xcf, 0x2c,
	0x30, 0x05, 0xd1, 0x70, 0x1f, 0x59, 0x23, 0x73, 0x92, 0xd8, 0xc0, 0x6a, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x6f, 0xb8, 0x4e, 0x4b, 0x10, 0x01, 0x00, 0x00,
}

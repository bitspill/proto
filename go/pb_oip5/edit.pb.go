// Code generated by protoc-gen-go. DO NOT EDIT.
// source: edit.proto

/*
Package pb_oip5 is a generated protocol buffer package.

It is generated from these files:
	edit.proto
	NormalizeRecord.proto
	NormalizeRecord.proto
	oip5.proto
	Record.proto

It has these top-level messages:
	EditProto
	NormalizeRecordProto
	NormalField
	Field
	NormalizeRecordProto
	NormalField
	Field
	OipFive
	Transfer
	Deactivate
	RecordProto
	Permissions
	Payment
	OipDetails
*/
package pb_oip5

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import oipProto_templates "github.com/oipwg/proto/go/pb_oip5/pb_templates"
import oipProto "github.com/oipwg/proto/go/pb_oip"
import patch "github.com/bitspill/protoPatch"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EditProto struct {
	Reference *oipProto.Txid `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
	// Types that are valid to be assigned to Mod:
	//	*EditProto_Patch
	//	*EditProto_Template
	Mod isEditProto_Mod `protobuf_oneof:"mod"`
}

func (m *EditProto) Reset()                    { *m = EditProto{} }
func (m *EditProto) String() string            { return proto.CompactTextString(m) }
func (*EditProto) ProtoMessage()               {}
func (*EditProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isEditProto_Mod interface {
	isEditProto_Mod()
}

type EditProto_Patch struct {
	Patch *patch.ProtoPatch `protobuf:"bytes,2,opt,name=patch,oneof"`
}
type EditProto_Template struct {
	Template *oipProto_templates.RecordTemplateProto `protobuf:"bytes,3,opt,name=template,oneof"`
}

func (*EditProto_Patch) isEditProto_Mod()    {}
func (*EditProto_Template) isEditProto_Mod() {}

func (m *EditProto) GetMod() isEditProto_Mod {
	if m != nil {
		return m.Mod
	}
	return nil
}

func (m *EditProto) GetReference() *oipProto.Txid {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *EditProto) GetPatch() *patch.ProtoPatch {
	if x, ok := m.GetMod().(*EditProto_Patch); ok {
		return x.Patch
	}
	return nil
}

func (m *EditProto) GetTemplate() *oipProto_templates.RecordTemplateProto {
	if x, ok := m.GetMod().(*EditProto_Template); ok {
		return x.Template
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EditProto) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EditProto_OneofMarshaler, _EditProto_OneofUnmarshaler, _EditProto_OneofSizer, []interface{}{
		(*EditProto_Patch)(nil),
		(*EditProto_Template)(nil),
	}
}

func _EditProto_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EditProto)
	// mod
	switch x := m.Mod.(type) {
	case *EditProto_Patch:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Patch); err != nil {
			return err
		}
	case *EditProto_Template:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Template); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EditProto.Mod has unexpected type %T", x)
	}
	return nil
}

func _EditProto_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EditProto)
	switch tag {
	case 2: // mod.patch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(patch.ProtoPatch)
		err := b.DecodeMessage(msg)
		m.Mod = &EditProto_Patch{msg}
		return true, err
	case 3: // mod.template
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(oipProto_templates.RecordTemplateProto)
		err := b.DecodeMessage(msg)
		m.Mod = &EditProto_Template{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EditProto_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EditProto)
	// mod
	switch x := m.Mod.(type) {
	case *EditProto_Patch:
		s := proto.Size(x.Patch)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EditProto_Template:
		s := proto.Size(x.Template)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*EditProto)(nil), "oipProto.oip5.EditProto")
}

func init() { proto.RegisterFile("edit.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4d, 0xc9, 0x2c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcd, 0xcf, 0x2c, 0x08, 0x00, 0xb1, 0xf4, 0xf2,
	0x33, 0x0b, 0x4c, 0xa5, 0x94, 0x4b, 0x52, 0x73, 0x0b, 0x72, 0x12, 0x4b, 0x52, 0x8b, 0xf5, 0x83,
	0x52, 0x93, 0xf3, 0x8b, 0x52, 0x42, 0xa0, 0x7c, 0x88, 0x1a, 0xb0, 0x1e, 0x29, 0xae, 0x92, 0x8a,
	0xcc, 0x14, 0x28, 0x9b, 0xbb, 0x20, 0xb1, 0x24, 0x39, 0x03, 0xc2, 0x51, 0xda, 0xc4, 0xc8, 0xc5,
	0xe9, 0x9a, 0x92, 0x59, 0x02, 0x56, 0x2c, 0xa4, 0xc3, 0xc5, 0x59, 0x94, 0x9a, 0x96, 0x5a, 0x94,
	0x9a, 0x97, 0x9c, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0xc4, 0xa7, 0x07, 0xb7, 0x2e, 0xa4,
	0x22, 0x33, 0x25, 0x08, 0xa1, 0x40, 0x48, 0x93, 0x8b, 0x15, 0x6c, 0x94, 0x04, 0x13, 0x58, 0xa5,
	0xa0, 0x1e, 0xc4, 0x60, 0xb0, 0xe2, 0x00, 0x10, 0xd3, 0x83, 0x21, 0x08, 0xa2, 0x42, 0xc8, 0x95,
	0x8b, 0x03, 0xe6, 0x4c, 0x09, 0x66, 0xb0, 0x6a, 0x75, 0x84, 0xb9, 0x70, 0x0f, 0xe8, 0x61, 0xf1,
	0x80, 0x07, 0x43, 0x10, 0x5c, 0xab, 0x13, 0x2b, 0x17, 0x73, 0x6e, 0x7e, 0x8a, 0x93, 0x76, 0x94,
	0x66, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x7e, 0x66, 0x41, 0x79,
	0xba, 0x3e, 0xd8, 0x3b, 0xfa, 0xe9, 0xf9, 0xfa, 0x05, 0x49, 0xf1, 0xa0, 0x70, 0xb1, 0x86, 0xd2,
	0x49, 0x6c, 0x60, 0x19, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x53, 0x96, 0x19, 0x43,
	0x01, 0x00, 0x00,
}
